{"version":3,"sources":["../tools/getMarkdown.js","../tools/writeMarkdownToHtmlFile.js"],"names":[],"mappings":";;;;;;AAAA;;;;;;kBAEe;AAAA,SACb,IAAI,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AACnC,wBAAK,qBAAL,EAA4B,OAA5B,EAAqC,UAAC,EAAD,EAAK,KAAL,EAAe;AAClD,UAAI,EAAJ,EAAQ;AACN,eAAO,EAAP;AACD;AACD,cAAQ,KAAR;AACD,KALD;AAMD,GAPG,CAAJ,EADa;AAAA,C;;;ACFf;;;;AACA;;;;;;AAEA,IAAM,KAAK,SAAX;;AAEA,IAAM,WAAW,SAAX,QAAW,CAAC,IAAD,EAAO,CAAP,EAAU,CAAV,EAAa,GAAb;AAAA,SACf,aAAG,QAAH,CAAY,IAAZ,EAAkB,UAAC,GAAD,EAAM,IAAN,EAAe;AAC/B,QAAI,GAAJ,EAAS,MAAM,GAAN;AACT,QAAI,MAAM,CAAV,EAAa,MAAM,IAAN,EAAY,GAAZ;;AAEb,WAAO,IAAP;AACD,GALD,CADe;AAAA,CAAjB;;AAQA,IAAM,QAAQ,SAAR,KAAQ,CAAC,IAAD,EAAO,GAAP,EAAe;AAC3B,eAAG,QAAH,CAAY,iBAAZ,EAA+B,UAAC,GAAD,EAAM,IAAN,EAAe;AAC5C,QAAI,GAAJ,EAAS,MAAM,GAAN;;AAET,QAAI,WAAW,KAAK,KAAL,CAAW,KAAX,CAAf;;AAEA,UAAM,SAAS,CAAT,IAAc,IAAI,IAAJ,CAAS,EAAT,CAAd,GAA6B,SAAS,CAAT,CAAnC;AACD,GAND;AAOD,CARD;;AAUA,IAAM,QAAQ,SAAR,KAAQ;AAAA,SACZ,aAAG,SAAH,CAAa,eAAb,EAA8B,IAA9B,EAAoC,eAAO;AACzC,QAAI,GAAJ,EAAS,MAAM,GAAN;AACT,YAAQ,GAAR,CAAY,0BAAZ;AACD,GAHD,CADY;AAAA,CAAd;;AAMA,IAAI,MAAM,EAAV;;AAEA,6BAAQ,IAAR,CAAa;AAAA,SACX,MAAM,GAAN,CAAU,UAAC,IAAD,EAAO,CAAP;AAAA,WAAa,IAAI,IAAJ,CAAS,SAAS,IAAT,EAAe,CAAf,EAAkB,MAAM,MAAxB,EAAgC,GAAhC,CAAT,CAAb;AAAA,GAAV,CADW;AAAA,CAAb","file":"script-compiled.js","sourcesContent":["import glob from 'glob';\n\nexport default () =>\n  new new Promise((resolve, reject) => {\n    glob('../markdown/**/*.md', options, (er, files) => {\n      if (er) {\n        reject(er);\n      }\n      resolve(files);\n    });\n  })();\n","import fs from 'fs';\nimport getMD from './getMarkdown';\n\nconst ap = '\\n---\\n';\n\nconst readFile = (file, i, l, arr) =>\n  fs.readFile(file, (err, data) => {\n    if (err) throw err;\n    if (i === l) final(data, arr);\n\n    return data;\n  });\n\nconst final = (data, arr) => {\n  fs.readFile('./template.html', (err, data) => {\n    if (err) throw err;\n\n    let template = data.split('œœœ');\n\n    write(template[0] + arr.join(ap) + template[1]);\n  });\n};\n\nconst write = data =>\n  fs.writeFile('../index.html', data, err => {\n    if (err) throw err;\n    console.log('The file has been saved!');\n  });\n\nlet res = [];\n\ngetMD().then(array =>\n  array.map((file, i) => res.push(readFile(file, i, array.length, res)))\n);\n"]}